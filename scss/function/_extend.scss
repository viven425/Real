@use "../variable/" as *;
@use "../function/mixin" as *;

// 公用
// 公用文字

// 動畫工用
%animated-fade-in-up {
    opacity: 0; // 初始狀態設為透明
    animation: fadeInUp 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards; // 使用更平滑的緩動函數
    will-change: transform, opacity; // 告訴瀏覽器這些屬性會改變，提前優化
}

%animated-fade-in {
    opacity: 0; // 初始狀態設為透明
    animation: fadeIn 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;
    will-change: opacity;
}


//通用文字
%article-text-style {
    color: #000;       // 黑色
    text-align: center;
    font-family: "LXGW WenKai Mono TC", monospace;
    font-style: normal;
    font-weight: 400;
    line-height: 200%;
    letter-spacing: 5.8px;
}

// --- 通用按鈕基礎樣式 ---
// 所有按鈕的基礎樣式，提供統一的外觀和交互過渡。
%button-base {
  display: inline-flex; // 使按鈕內的文字和內容水平排列
  padding: 10.5px 36.5px; // 設置內邊距，讓按鈕有足夠的寬度與高度
  justify-content: center; // 水平置中文字
  align-items: center; // 垂直置中文字

  border-radius: 31px; // 設置按鈕圓角，讓按鈕呈現圓形效果
  background: #965050; // 設定按鈕的背景顏色
  box-shadow: 2px 4px 11.8px -4px rgba(0, 0, 0, 0.25); // 加入陰影效果，使按鈕看起來有立體感

  color: #FFF; // 設置文字顏色為白色
  font-family: "LXGW WenKai Mono TC", sans-serif; // 設置字體樣式
  font-size: 20px; // 設定字體大小
  font-style: normal; // 設置字體風格為正常
  font-weight: 400; // 設置字體粗細為 400（常規）
  line-height: 150%; // 設置行高，讓文字有適當的垂直間距
  letter-spacing: -0.528px; // 設置字母間距，讓字母更加緊湊
  text-decoration: none; // 去除超鏈接的下劃線（如果有）
  cursor: pointer; // 當鼠標懸停在按鈕上時顯示為手型游標，表示可點擊

  // 當按鈕被懸停時改變背景顏色
  &:hover {
    background: #7a403f; // 改變懸停時背景顏色
  }
}


// --- 通用 Flex Column 樣式 ---
// 快速創建一個垂直方向的 Flexbox 容器。
%flex-column {
    display: flex;
    flex-direction: column;
}

// --- 通用 Flex Column with Gap 樣式 ---
// 垂直 Flexbox 容器，帶有項目間距。
%flex-column-gap {
    @extend %flex-column;
    gap: 1rem;
}

// --- Navbar 專用文字款式 ---
%nav-text-style {
    color: var(--primary);
    font-family: var(--font-body);
    font-size: 18px;
    font-style: normal;
    font-weight: 400;
    line-height: 150%;
    letter-spacing: -0.396px;
    text-align: center;
    text-decoration: none;
    display: block;
}

// --- Frame 框樣式（包住 a） ---
// 應用於按鈕或可點擊元素的邊框和背景過渡效果 灰色框架。
%frame-style {
    padding: 10px 16px;
    border-radius: 8px;
    transition: background-color 0.3s;
    cursor: pointer;
    &:hover {
        // 修正點：在這裡使用 Sass 變數 `$primary`
        // 因為 `lighten()` 是一個 Sass 函數，它需要在編譯時知道具體的顏色值。
        background-color: lighten($primary, 40%);
    }
}

// --- 資中所有人都能套用自己 (Flexbox alignment) ---
// 常用於水平方向的 Flexbox 項目對齊。
%menu-item-flex-align {
    display: flex;
    align-items: center;
}

// --- 垂直置中 所有人用自己 (Flexbox column alignment) ---
// 常用於垂直方向的 Flexbox 項目居中。
%flex-center-v {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;

}

// --- ▍ul.menu 整體樣式v 标题框架用 ---
// 菜單列表的通用 Flexbox 佈局。
%menu-wrapper {
    display: flex;
    gap: 32px;
    padding: 0 30px;
    align-items: center;
    list-style: none;
    margin: 0;
}

// --- ▍nav-bar 外層樣式（控制寬度标题） ---
// 導航欄內容的寬度和居中。
%nav-bar-wrapper {
    width: 100%;
    max-width: 1200px;
    display: flex;
    justify-content: center;
    align-items: center;
}

// --- ▍最外層navbar置中标题 可以用在想要之中的所有地方 ---
// 整個導航欄的最外層容器樣式，實現居中和基礎視覺效果。
%nav-outer-wrapper {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 80px;
    // 這裡同樣使用 CSS 變數，因為不需要在 Sass 編譯時進行顏色計算。
    background-color: var(--white-color);

}

// --- 通用按鈕基礎樣式 ---
// 所有按鈕的基礎樣式，提供統一的外觀和交互過渡。
%button-base {
    display: inline-block;
    padding: 10px 20px;
    border-radius: 8px;
    text-align: center;
    text-decoration: none;
    cursor: pointer;
    transition: background-color 0.3s ease, color 0.3s ease;
}

// --- 通用 Flex Column 樣式 ---
// 快速創建一個垂直方向的 Flexbox 容器。
%flex-column {
    display: flex;
    flex-direction: column;
}

// --- 通用 Flex Column with Gap 樣式 ---
// 垂直 Flexbox 容器，帶有項目間距。
%flex-column-gap {
    @extend %flex-column;
    gap: 1rem;
}

